/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 octo.gltf --transform --types
*/
import ModelGltf from "./octo.gltf?url"
import * as THREE from "three"
import React, { ForwardedRef, forwardRef, useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { GLTF } from "three-stdlib"
import { Group } from "three"

type GLTFResult = GLTF & {
  nodes: {
    Octopus: THREE.Mesh
    Cube: THREE.Mesh
  }
  materials: {
    Octopus: THREE.MeshStandardMaterial
  }
}

export const OctoModel = forwardRef(
  (props: JSX.IntrinsicElements["group"], ref: ForwardedRef<Group>) => {
    const { nodes, materials } = useGLTF(ModelGltf) as GLTFResult
    return (
      <group {...props} dispose={null} ref={ref}>
        <mesh geometry={nodes.Octopus.geometry} material={materials.Octopus} />
        <mesh geometry={nodes.Cube.geometry} material={materials.Octopus} />
      </group>
    )
  }
)
useGLTF.preload(ModelGltf)
