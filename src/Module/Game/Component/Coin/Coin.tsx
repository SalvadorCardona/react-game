/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 Coin.glb --transform --types s
*/

import * as THREE from "three"
import React, { forwardRef, useEffect, useRef } from "react"
import { useGLTF } from "@react-three/drei"
import { GLTF } from "three-stdlib"
import ModelGltf from "./Coin.glb?url"

type GLTFResult = GLTF & {
  nodes: {
    skull_coin_reference003: THREE.Mesh
  }
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial
  }
}

export function Coin(props: JSX.IntrinsicElements["group"], ref) {
  const { nodes, materials } = useGLTF(ModelGltf) as GLTFResult

  return (
    <group {...props} dispose={null} ref={ref}>
      <mesh
        geometry={nodes.skull_coin_reference003.geometry}
        material={materials["Material.001"]}
        position={[-0.02, -0.14, -0.07]}
        rotation={[1.95, -0.51, -3.13]}
        scale={1.27}
      />
    </group>
  )
}

export const CoinRef = forwardRef(Coin)

useGLTF.preload(ModelGltf)
